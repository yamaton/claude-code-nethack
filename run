#!/bin/bash

# --- Configuration ---
SESSION_NAME="claude-nethack"
NETHACK_COMMAND="nethack -u Claude -p valkyrie -r human"
KEY_DELAY=0.1


# Show help information
if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    cat << 'EOF'
NetHack tmux Interface - Claude Code NetHack Project

USAGE:
    ./run [COMMAND...]           Send commands to NetHack and view current state
    ./run --init                 Start fresh game (kills existing session)
    ./run --cleanup              Kill the tmux session completely
    ./run --help                 Show this help

EXAMPLES:
    ./run                        View current game state
    ./run h j k l                Move west, south, north, east
    ./run o h                    Open door to the west
    ./run s                      Search for hidden doors/passages
    ./run ,                      Pick up items
    ./run 5j                     Move south 5 times

NETHACK SYMBOLS:
    @    Claude's position       >    Stairs down (goal!)
    f    Pet (Rex)              <    Stairs up
    #    Corridors               +    Closed doors
    $    Gold/treasure           %    Enemy corpses

For more information, see README.md and NETHACK_SCRAPBOOK.md

This tool is designed for Claude Code to autonomously play NetHack.
EOF
    exit 0
fi

# Add session cleanup option
if [ "$1" = "--cleanup" ]; then
    tmux kill-session -t "$SESSION_NAME" 2>/dev/null
    exit 0
fi

# Add session cleanup option
if [ "$1" = "--init" ]; then
    tmux kill-session -t "$SESSION_NAME" 2>/dev/null
fi

# --- Session Management ---
# Check if the tmux session exists. If not, create it and start NetHack.
if ! tmux has-session -t "$SESSION_NAME" 2>/dev/null; then
    echo "Creating new NetHack session: $SESSION_NAME"
    tmux new-session -d -s "$SESSION_NAME" "$NETHACK_COMMAND"
    sleep 1 # Give nethack time to load
fi

# --- Action and State Capture ---

# Loop through each argument provided to the script.
# This allows us to send them one by one with a delay in between.
for arg in "$@"; do
    # Send the current argument (e.g., 'd', then 'a').
    tmux send-keys -t "$SESSION_NAME" -- "$arg"
    # Wait for a short moment to let NetHack process the keystroke.
    sleep "$KEY_DELAY"
done

# Wait a fraction of a second for the screen to update.
sleep 0.2

# Capture the pane's content and print it to stdout (without ANSI escape sequences).
tmux capture-pane -p -t "$SESSION_NAME"
